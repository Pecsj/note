知识回顾
	修饰符
	权限修饰符
	   public		公共的	本类  同包  子类  当前工程的任意类中
	   protected	保护的	本类  同包  子类 (在子类的范围内 子类对象自己可以访问)
	   默认不写		默认的	本类  同包  (package关键字后面的包名完全一致)
	   private		私有的	本类
		可以修饰类及类成员(除了块)
		修饰类的时候只允许两个 public  默认不写
	特征修饰符
	   final		最终的  不可更改的
			修饰变量	如果变量没有赋值  给一次机会  如果变量有值  不允许再次改变
				变量基本类型  值不可改变  变量引用类型  地址引用不可改变
			修饰属性   特点与修饰变量类似  修饰属性必须赋初始值  否则编译报错
			修饰方法   方法是最终的不可更改   方法不能被子类重写(覆盖)
			修饰类	类是最终的  (太监类 不能有子类)  类不可以被其他子类继承
				常见的工具类都是final的  比如 String  Math  Scanner  Integer....
	   static		静态的
	   abstract	抽象的	类  方法
	   native		本地的
	   *transient	瞬时的  短暂的----->序列化
	   *synchronized	同步的  线程相关的知识
	   *volatile	不稳定  保护属性或方法的线程安全

	Java类和类的关系
		is-a继承 实现    has-a组合 聚合 关联   use-a依赖
	Java面向对象的三(四)大特性
		继承  封装  多态  (抽象)
	封装: 将数据或执行过程包装起来
	目的: 保护数据或执行过程的安全
		数据---->属性
		方法---->
	方法本身就是一个封装-----执行过程 计算方式
	类本身也算是一个封装-----数据 和 方法 ArrayBox
	类中属性(数据)的封装
		属性私有的--->保护属性数据的安全  不可以在类以外的部分直接访问
		需要给属性的操作提供一些方式(方法)   setName   getName
===================================================================
	特征修饰符之
	1.可以修饰什么
	2.修饰后有什么特点

	static静态的
	1.可以修饰 ： 修饰属性   修饰方法   *修饰块    修饰类(内部类)
	2.特点：
		1.静态元素在类加载时就初始化啦，创建的非常早，此时没有创建对象 
		2.静态元素存储在静态元素区中，每一个类有一个自己的区域，与别的类不冲突
		3.静态元素只加载一次(只有一份)，全部类对象及类本身共享
		4.由于静态元素区加载的时候，有可能没有创建对象，可以通过类名字直接访问
		5.可以理解为静态元素不属于任何一个对象，属于类的
		6.静态元素区Garbage Collection无法管理，可以粗暴的认为常驻内存
		7.非静态成员(堆内存对象里)中可以访问静态成员(静态区)
		8.静态成员中可以访问静态成员(都存在静态区)
		9.静态成员中不可以访问非静态成员(个数 一个出发访问一堆相同名字的东西 说不清)(静态元素属于类 非静态成员属于对象自己)
		10.静态元素中不可以出现this或super关键字(静态元素属于类)

	设计模式23种   单例模式Singleton
==================================================================
	
	小任务
		书店买书
		按照买书人的身份做相应的折扣
		1.书店内部人员   管理员    5折-------0
		2.书店的VIP       VIP会员  8折-------1
		3.普通路人	         普通       全价-------2

		float price = 100.0;//价格
		int identity  =  0;
		switch(identity){//  int(byte short)  char  enum   1.7String
		case 0://管理员
		
		case 1://VIP

		case 2://普通

		}
	程序设计的问题
		1.可读性   名字  缩进  注释
		2.健壮性   判断严谨   
		3.优化      结构  性能  内存
		4.复用性   方法  类
		5.可扩展性   抽象  接口  面向配置文件

	命名规约
		类名首字母大写
		属性 方法 变量首字母小写 第二个大写
		构造方法 与类名一致 首字母大写
		包  全部字母小写  注意区分关键字
		静态常量  全部字母大写  _
		私有属性对应的方法   getName/setName
		见名知义
















