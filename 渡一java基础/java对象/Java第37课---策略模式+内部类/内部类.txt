知识回顾
	适配器模式  Adapter-----结构型模式的一种
	缺省适配器模式
	解决一个接口(规则) 定义了好多方法
	适配器(通常是一个抽象类)  添加某些具体实现 (方法内部抛出异常)
	每一个子类实现接口  所有的方法

	多态:
	多态指的是一个对象体现出的多种不同的形态(身份)，可以将同一种行为(方法)表现出不同的效果
	多态的表现形式:
	1.多态的前提需要有继承关系
	2.使用父类类型的引用  指向子类的对象    Person p = new Teacher();  向上转型
	3.该引用只能调用父类中定义的属性/方法
	4.执行结果  如果调用属性 执行父类的  如果调用方法 看子类是否重写
	5.若想要调用子类中独有的成员 将身份还原回去(造型--向下转型)
	   若需要转换的类型与真实对象的类型不匹配 会产生一个运行时异常ClassCastException
	6.为了避免转型时产生的问题  可以利用instanceof进行判断比较
	   比较前面对象和后面类型是否匹配   p  instanceof  Teacher

===============================================================
	银行Bank
		设计一个方法 等待用户来办理业务
		profession(需要一个人)
			叫一个号码-->排队
			去窗口办理-->办理
			办理完毕离开->离开
	老人   年轻   土豪
	//按照刚才的设计 可能有问题
	//1.三个不同的人类方法名不一致(可以)
	//2.银行办理业务的方法写了三个
	//解决如上所述的问题   可以在三个人类之上创建一个父类
	//1.解决三个人类中的相同代码 比如name属性 比如get方法之类的
	//2.父类定义的三个方法可以是抽象 解决了子类命名不一致的问题 子类执行也不一致
	//3.父类可以作为参数传入银行

	调用一个方法  名字一样  传递参数却不同
	1.利用方法重载---静态加载
	2.利用多态效果---动态加载

================================================================
	体现出另一种设计模式
	策略模式Strategy-----行为型模式
	用来解决 执行流程固定 执行的结果由于提供了不同的策略而不同
		银行类
		   方法办理业务(人){     人---抽象类  接口(不能产生对象)   传递一个子类对象
		       欢迎用户进来啦
		       叫号
		       办理
		       离开
		       欢迎您下次再来
		   }
		人类
		      提供策略--抽象
		具体类
		      实现策略
=================================================================
	内部类
	   指的是在Java中可以将一个类定义在另一个类的内部
	   内部类可以定义在  类的内部 (与类成员层次一致)
	   内部类可以定义在  方法/块内部 (与类成员相差一个层次  方法的局部变量一个层次)
	LinkedBox   Node内部类

	*1.成员内部类
		将一个类直接定义在类的里面，作为成员，与属性或方法层次一致
		成员内部类可以与正常类一样 使用不同的修饰符来修饰
		好处1.省略了一个.java文件  好处2.成员内部类中可以访问外部类的所有成员 包括私有的
		若想要在内部类中通过对象.调用外部类成员   外部类.this.外部类成员;
		内部类存在后 源代码进行编译 产生一个字节码  Demo$InnerDemo.class
	2.局部内部类
		将一个类定义在方法/块里面，作为成员的内部结构，与临时的局部变量一个层次
		局部内部类像是一个局部的变量一样，不能用public protected private及static
		只能用abstract或final
		局部内部类命名规则Demo$1InnerTestMethod   Demo$2InnerTestMethod
		局部内部类使用的变量只能是final修饰
	*3.匿名内部类
		成员匿名内部类
		局部匿名内部类
		public interfase Test{
			public void test();
		}
		Test t = new Test(){
			public void test(){
			}
		};
		通常接口或抽象类的具体子类这样写
		开发中为了省略一个类文件   上述写法比较常见
		匿名内部类很特殊 只有类体 没有类的所有结构( 修饰符 名字 继承 实现)
		不能用任何修饰符来修饰  匿名内部类也没有构造方法
		Swing  做一个按钮 绑定一个事件监听器
	4.静态内部类
		成员静态内部类
		不需要外部类对象，通过正常的方式直接创建内部类
		静态元素不能访问非静态成员(自己类和外部类)


















	









