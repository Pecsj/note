知识回顾
	修饰符
	设计模式  23种
	设计模式一种设计经验---(一个总结)
	主要是用来解决某些场景下某一类问题的---(一种通用的解决方案)
	
	设计模式分类 三类
	1.创建型模式 5
		用于解决对象创建的过程
		单例 工厂 抽象工厂 建造者 原型
	2.结构型模式 7
		通过某种形式将类或者对象结合在一起 构成更加复杂 更合理的结构
		适配器 装饰者 代理 外观 桥接 组合 享元
	3.行为型模式 11
		用来解决对象之间的交互问题 更合理优化类或者对象之间的关系 划分职责
		观察者 策略 模板 责任链 解析器 迭代子 命令 状态 备忘录 访问者 中介者

	单例设计模式Singleton
	解决对象的创建问题
	想要设计一个类  让这个类只能创建一个对象
	控制内存中对象占用空间的问题
	解决方式(饿汉式--立即加载   懒汉式--延迟加载    生命周期托管)
	1.私有的构造方法
	2.私有的静态的当前类的对象作为属性
		在属性创建的同时直接new 属性对象即被初始化
	3.公有的静态的方法  用来返回该对象(唯一的那个)
		在调用方法时判断 对象是否被初始化 若没有 再加载 若有 则直接拿去返回(对象的引用)


	权限  public protected  默认 private
	特征  final  static(类加载的机制)
	        abstract  native
	        transient  synchronized  volatile

	存在继承关系的类 加载机制 及执行过程
	加载类的过程---静态元素已经加载
        	new Person();
	1.加载父类
	2.父类会产生自己的静态空间   属性 方法 块
		执行静态块
	3.加载子类
	4.子类会产生自己的静态空间   属性 方法 块
		执行静态块
	5.开辟对象空间
	6.加载父类的非静态成员   属性 方法 块 构造方法
	7.    执行块  执行父类构造方法
	8.加载子类的非静态成员   属性 方法 块 构造方法
	9.    执行块  执行子类构造方法
	10.将对象空间的地址引用交给 变量来存储
===================================================================
	native本地的
	Java源代码中看到native就已经再也看不见后续代码
	后续会调用其他的编程语言C++  C执行内存的操作    帮我们操作内存
	Object类中一个方法   hashCode

	abstract抽象的---(很不具体 没有具体的执行 只是个概念)
	1.可以修饰什么
		修饰方法
		用abstract修饰符修饰的方法  只有方法的结构 没有方法执行体叫做抽象方法
		当然注意native修饰的方法虽然也没有方法体 但是不是抽象方法 只是执行的过程是其他语言写的 看不见
		修饰类
		用abstract修饰符修饰的类 叫做抽象类
	2.修饰后有什么特点
		抽象类中必须有抽象方法么?  不是必须含有抽象方法  
		抽象方法必须放在抽象类中么?  目前来看必须放在抽象类中(或接口中)  普通类是不允许含有抽象方法
	3.研究一下什么叫抽象类  抽象类有什么特点？(通常用来描述事物 还不是很具体)
		1.类里面有什么  成员
			属性	可以含有一般的属性  也可以含有 private static final等等
			方法	可以含有一般的方法  也可以含有 private static final等等
				   注意:抽象类中是允许含有抽象方法(只有方法结构 没有方法执行体)
			块	可以含有一般的程序块 也可以含有static程序块
			构造方法	可以含有构造方法  包括重载
		2.类如何使用  创建对象
			抽象类含有构造方法  但是我们不能通过调用构造方法直接创建对象
			抽象类只能通过子类单继承来做事
			为什么不让我们调用构造方法创建对象？为什么还有呢？
		3.类和类的关系
			抽象类----直接单继承----抽象类	 可以
			抽象类----直接单继承----具体类  可以  (用法通常不会出现)
			具体类----直接单继承----抽象类  不可以  (将父类的抽象方法具体化  或子类也变成抽象类)
	4.小问题
		抽象类中能不能没有抽象方法  全部都是具体成员  可以
		抽象类中能不能没有具体成员  全部都是抽象方法  可以 ---> 抽象类抽象到极致 质的变化 ---> 接口
		接口可以理解为是抽象类抽象到极致--->还是一个类的结构   不能用class修饰 改用interface修饰
	5.什么是接口(通常是为了定义规则)
		接口也是一个类的结构  只不过 用interface修饰 替换原有的class
		1.有什么  成员
			属性	不能含有一般属性  只能含有公有的静态的常量  public static final 
			方法	不能含有一般方法  只能含有公有的抽象的方法(1.8 defualt修饰具体方法)
			块	不能含有一般程序块  也不能含有static块(块本身就是具体的 接口中不让有具体的)
			构造方法	不能含有构造方法
		2.如何使用  创建对象
			不能创建对象
			只能通过子类多实现(implements)来做事
			public class A implements B,C,D{

			}
		3.与别的类结构关系
			接口不能继承别的类  最抽象
			抽象类----直接多实现----接口	可以
			具体类----直接多实现----接口	不可以(必须将接口中的抽象方法具体化 自己变成抽象类)
			*接口---多继承---接口	可以直接多实现
	6.小例子
		设计一款游戏   王者荣耀
		游戏里有什么
		英雄----抽象类
			坦克 法师 刺客 射手-----抽象类
		小兵----抽象类
			法师兵  坦克兵  超级兵---抽象类
		Buff----抽象类
		防御塔
		水晶
		接口---定义规则   定义一些功能
		普通攻击
		普通类----继承  射手   实现接口

	7.封装一个LinkedBox     ArrayBox不适合插入 删除








