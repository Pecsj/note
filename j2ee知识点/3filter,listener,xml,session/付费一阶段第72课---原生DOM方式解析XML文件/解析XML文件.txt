
	知识回顾
	XML
		EXtensible  Markup  Language扩展标记语言
		<><>
		更多的关注数据的存储和传输	HTML(关注展示)
		结构良好的	   遵循标签的结构  成对出现  满足嵌套  标签名字随意
		结构有效的   在结构良好的基础上   遵循很多规则
			用来定义规则的也是一个xml形式的文件     dtd   xsd    tld(定义标签)
	描述一个dtd规则
		创建一个文件   普通的xml  想要记录数据
		数据基础上添加一个规则   写在xml文件的里面   写在另一个xml文件中 引入
		<!DOCTYPE 根标记 [规则]>
		<!DOCTYPE 根标记 SYSTEM/PUBLIC "文件">
		<!ELEMENT 标签名 类型>
		<!ELEMENT 标签名 (子标签*，子标签?，子标签+)>
			通配符不是必须	+(1-n)   ?(0-1)   *(0-n)
		<!ATTLIST 标签名 属性名 类型 值>
		<!ENTITY 实体名字 "值">	&实体名字;

	=====================================================

	解析XML文件内容
		本质就是文件内容的读取Input

		解析XML文件两种方式
		DOM解析(Document Object Model)
			树结构处理方式
			将文档全部解析  形成一个树结构   节点---标签
			优点  编程容易  缺点 必须将整个文档全部处理完毕(慢)
		SAX解析(Simple Api for Xml)-----扩展
			类似流媒体方式
			基于事件的模式  解析时候触发一系列事件
			当某一个tag标签被解析的时候  激活后续的方法
			优点 快(不需要将所有文档都一次性处理完)
			缺点 编写很麻烦(复用性也不强)

		JDOM(Java-based Document Object Model)
			外部jar包  基于DOM方式 底层提升了性能
		DOM4J(Document Object Model for Java)
			外部jar包  基于JDOM方式 底层提升了性能





